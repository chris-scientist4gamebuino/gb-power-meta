// author: chris-scientist
// created at: 18/02/2022

#include <Gamebuino-Meta.h>

#include "ButtonOnOff.h"

const bool ButtonOnOff::ON_STATE = true;

ButtonOnOff::ButtonOnOff() :
  stateOfButton(ButtonOnOff::ON_STATE),
  xPosition(0),
  yPosition(0)
{}

void ButtonOnOff::initializePosition(const int16_t aPositionX, const int16_t aPositionY) {
  this->xPosition = aPositionX;
  this->yPosition = aPositionY;
}

void ButtonOnOff::initialize(const bool isOnState) {
  if( isOnState == ButtonOnOff::ON_STATE ) {  this->changeStateAtOn(); }
  else {                                      this->changeStateAtOff(); }
}

void ButtonOnOff::rendering() const {
  static const uint8_t BUTTON_IMAGES[] = {

      // metadata

      54,   // frame width
      16,   // frame height
      0x02, // frames (lower byte)
      0x00, // frames (upper byte)
      0,    // frame loop
      0x0,  // transparent color
      1,    // indexed color mode

      // colormap

      // frame 1/2
      0x00, 0x00, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x00, 0x00,
      0x00, 0x02, 0x21, 0x11, 0x12, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20, 0x00,
      0x00, 0x22, 0x12, 0x22, 0x11, 0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x22, 0x00,
      0x02, 0x21, 0x22, 0x22, 0x21, 0x12, 0x24, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x42, 0x20,
      0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x22,
      0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x22,
      0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x22,
      0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x22,
      0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x22,
      0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x22,
      0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x22,
      0x02, 0x21, 0x22, 0x22, 0x21, 0x12, 0x24, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x42, 0x20,
      0x00, 0x22, 0x11, 0x11, 0x11, 0x22, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x22, 0x00,
      0x00, 0x02, 0x21, 0x11, 0x12, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x20, 0x00,
      0x00, 0x00, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

      // frame 2/2
      0x00, 0x00, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x00, 0x00,
      0x00, 0x02, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x21, 0x11, 0x12, 0x20, 0x00,
      0x00, 0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x12, 0x22, 0x11, 0x22, 0x00,
      0x02, 0x26, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x62, 0x21, 0x22, 0x22, 0x21, 0x12, 0x20,
      0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22,
      0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22,
      0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22,
      0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22,
      0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22,
      0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22,
      0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x12, 0x22, 0x22, 0x22, 0x11, 0x22,
      0x02, 0x26, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x62, 0x21, 0x22, 0x22, 0x21, 0x12, 0x20,
      0x00, 0x22, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x22, 0x11, 0x11, 0x11, 0x22, 0x00,
      0x00, 0x02, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x21, 0x11, 0x12, 0x20, 0x00,
      0x00, 0x00, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

  };

  const uint8_t frameIndex = ( this->isOff() ? 0 : 1 );
  Image buttonImg(BUTTON_IMAGES);
  buttonImg.setFrame(frameIndex);

  gb.display.drawImage(
    this->xPosition,    // x-pos
    this->yPosition,    // y-pos
    buttonImg,          // image
    this->getWidth(),   // width
    this->getHeight()   // height
  );
}

void ButtonOnOff::changeStateAtOn() {   this->stateOfButton = ButtonOnOff::ON_STATE; }
void ButtonOnOff::changeStateAtOff() {  this->stateOfButton = ( ! ButtonOnOff::ON_STATE ); }

const bool ButtonOnOff::isOn() const {    return ( this->stateOfButton == ButtonOnOff::ON_STATE ); }
const bool ButtonOnOff::isOff() const {   return ( ! this->isOn() ); }

const int16_t ButtonOnOff::getWidth() const {   return 54; }
const int16_t ButtonOnOff::getHeight() const {  return 16; }
